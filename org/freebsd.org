#+title: Hammock's FreeBSD Notes
#+author: Hammock Sunburn
#+startup: content

* FreeBSD

My NAS setup isn't scripted or repeatable (yet), other than through
these notes.

Ensure system clock is correct, fetch and install updates, and reboot.

#+begin_src shell
su -
ntpdate 0.freebsd.pool.ntp.org
freebsd-update fetch
freebsd-update install
reboot
#+end_src

Add FTP user:

#+begin_src shell
su -
pw useradd ftp -c "FTP User" -u 14 -g ftp
pw usermod esc -G ftp,wheel
#+end_src

Install packages I'll need:

#+begin_src shell
pkg update
pkg install samba413 neovim emacs-nox mbuffer rsync cmdwatch
#+end_src

Enable various services by editing =/etc/rc.conf= and adding these lines:

#+begin_src shell
samba_server_enable="YES"
nfs_server_enable="YES"
mountd_enable="YES"
rpcbind_enable="YES"
#+end_src

Copy the smb4.conf file into /usr/local/etc. Reboot.

Here are some basic commands I'd use to set up disks.

#+begin_src shell
gpart destroy -F ada1
gpart destroy -F ada2
gpart destroy -F ada3
gpart create -s gpt ada1
gpart create -s gpt ada2
gpart create -s gpt ada3
root@hoover:/etc # gpart show ada1
=>        40  1953525088  ada1  GPT  (932G)
          40  1953525088        - free -  (932G)
gpart add -a 1m -s 1950000000 -l disk1-4WNE -t freebsd-zfs ada2
gpart add -a 1m -s 1950000000 -l disk2-30AE -t freebsd-zfs ada1
gpart add -a 1m -s 1950000000 -l disk3-4PSE -t freebsd-zfs ada3
zpool create -f zdata raidz1 /dev/gpt/disk1-4WNE /dev/gpt/disk2-30AE /dev/gpt/disk3-4PSE
zfs set compression=lz4 zdata
zfs set atime=off zdata

zfs create zdata/data1
chown -R ftp:ftp /zdata/data1
chmod g+w /zdata/data1
touch /etc/exports
service nfsd start
service mountd reload
zfs set sharenfs="-mapall=14:14 -network 192.168.1.0/24" zdata/data1
#+end_src

When it comes time to send large ZFS snapshots across the network, use =mbuffer=.

https://www.reddit.com/r/zfs/comments/buuugd/protip_ive_discovered_want_to_zfs_send_a_huge/

On receiving server:

#+begin_src shell
mbuffer -4 -I 1234 | zfs receive zdata/test-xfer
#+end_src

On sending server:

#+begin_src shell
zfs send zdata/test-xfer@to-send | mbuffer -O 192.168.1.148:1234
#+end_src

Then, on the receiving server, you can destroy the snapshot:

#+begin_src shell
zfs destroy zdata/test-xfer@to-send
#+end_src

To replace a failed disk for disk1, set up gpart as above and then:

#+begin_src shell
zpool replace zdata 12636271375180382140 gpt/disk1-XXXX
#+end_src
